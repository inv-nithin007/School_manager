# Generated by Django 5.2.4 on 2025-07-11 09:19

from django.db import migrations
from django.contrib.auth.models import User


def truncate_students_and_teachers(apps, schema_editor):
    """
    Custom migration to truncate all student and teacher records
    """
    Student = apps.get_model('students', 'Student')
    Teacher = apps.get_model('teachers', 'Teacher')
    UserProfile = apps.get_model('accounts', 'UserProfile')
    
    # Count records before deletion
    student_count = Student.objects.count()
    teacher_count = Teacher.objects.count()
    
    # Get all users associated with students and teachers before deletion
    student_user_ids = list(Student.objects.values_list('user_id', flat=True))
    teacher_user_ids = list(Teacher.objects.values_list('user_id', flat=True))
    
    # Delete students first
    Student.objects.all().delete()
    
    # Delete teachers
    Teacher.objects.all().delete()
    
    # Clean up associated User records
    User.objects.filter(id__in=student_user_ids + teacher_user_ids).delete()
    
    # Clean up any remaining user profiles for students/teachers
    UserProfile.objects.filter(role__in=['student', 'teacher']).delete()
    
    print(f"✓ Truncated {student_count} student records and {teacher_count} teacher records")
    print("✓ Cleaned up associated User and UserProfile records")


def reverse_truncate(apps, schema_editor):
    """
    Reverse migration - cannot restore deleted data
    """
    print("⚠️  Cannot reverse truncation - data is permanently deleted")


class Migration(migrations.Migration):

    dependencies = [
        ('students', '0001_initial'),
        ('teachers', '0001_initial'),
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(truncate_students_and_teachers, reverse_truncate),
    ]
